{"name":"The-radio","tagline":"Web radio for your grandma","body":"### How web radios should be build.\r\n![The result](https://raw.github.com/2dom/the-radio/master/pics/small_front.JPG )\r\nMy wife wanted to have a new radio for the kitchen and threatened to buy some ~150 EUR CD/analog radio combo if I don't do anything about it. So I committed to come up with something that is \"infinitely better\" for less then 100 EUR. How wrong I was to believe that one could simply buy an easy to operate web-radio (think 3 year olds) that can play music from our NAS as well as tolerate the occasional ratatouille covered finger. The closest I could get was a Logitech Squeezebox but that has a million buttons and frankly would not survive a week in out kitchen. \r\n\r\nSo I set out to build a web-radio into a old radio shell I bought ages ago on a flea market. It is a German Greatz Valve Radio build between 1953 and 1954. \r\n![Original radio](https://raw.github.com/2dom/the-radio/master/pics/small_original.JPG ) \r\n\r\nWhat I want from a radio is rather modest, it should play music from our NAS and the web and should be easy to operate even if you are coated in a bit of sugar, flour \r\n\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n![Functional but not cleaned up](https://raw.github.com/2dom/the-radio/master/pics/small_back.JPG \"Functional but not cleaned up\")\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}